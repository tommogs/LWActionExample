# This is a basic workflow to help you get started with Actions

name: Lacework_CI

on: [workflow_dispatch, pull_request]

#  push:
#    branches:
#     - main
#     - test-lacework
#    paths:
#      - Makefile
#      - Dockerfile
#      - .dockerignore
#      - "**.go"
#      - "go.mod"
#      - .github/workflows/main.yml
      
env:
  DockerRegistry: ghcr.io
  ORG: lhasadreams
  RepoName: electron3



jobs:
  build-lw-vuln-check-publish:
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: "Set environmental variables"
        run: |
          echo "Repository=$DockerRegistry/$ORG/$RepoName" >> $GITHUB_ENV    
      - name: Checkout
        uses: actions/checkout@v3
     # - name: Log in to the Container registry
     #   uses: docker/login-action@v2
     #   with:
     #     registry: ghcr.io
     #     username: ${{ github.actor }}
     #     password: ${{ secrets.TOKEN_GH }}

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag $RepoName:${{github.run_number}}      
        
      - name: Scan container images for vulnerabitilies using Lacework
        uses: lacework/lw-scanner-action@v1.3.0
        with:
          LW_ACCOUNT_NAME: ${{ secrets.LW_ACCOUNT_NAME }} 
          LW_ACCESS_TOKEN: ${{ secrets.LW_ACCESS_TOKEN }}
          IMAGE_NAME: electron3
          IMAGE_TAG: ${{github.run_number}}
          SAVE_RESULTS_IN_LACEWORK: true
          SAVE_BUILD_REPORT: true
          BUILD_REPORT_FILE_NAME: myreport.html
          SIMPLE_OUTPUT: true
          COLOR_OUTPUT: true
          PRETTY_OUTPUT: true
          ADDITIONAL_PARAMETERS: --policy --json
 
          
    #  - name: Tag the Docker image
    #    run: docker tag $RepoName:${{github.run_number}} $Repository:${{github.run_number}}
    #  - name: Publish Docker image
    #    run: docker push $Repository:${{github.run_number}}
